/* Generated By:JavaCC: Do not edit this line. G2Constants.java */
package model.initialisation;


/**
 * Token literal values and constants.
 * Generated by org.javacc.parser.OtherFilesGen#start()
 */
public interface G2Constants {

  /** End of File. */
  int EOF = 0;
  /** RegularExpression Id. */
  int OR_OP = 5;
  /** RegularExpression Id. */
  int AND_OP = 6;
  /** RegularExpression Id. */
  int SUPEGAL_OP = 7;
  /** RegularExpression Id. */
  int INFEGAL_OP = 8;
  /** RegularExpression Id. */
  int SUP_OP = 9;
  /** RegularExpression Id. */
  int INF_OP = 10;
  /** RegularExpression Id. */
  int DIFF_OP = 11;
  /** RegularExpression Id. */
  int EGAL_OP = 12;
  /** RegularExpression Id. */
  int MOINS_B_OP = 13;
  /** RegularExpression Id. */
  int PLUS_OP = 14;
  /** RegularExpression Id. */
  int DIVIDE_OP = 15;
  /** RegularExpression Id. */
  int FOIS_OP = 16;
  /** RegularExpression Id. */
  int POWER_OP = 17;
  /** RegularExpression Id. */
  int SQRT_LEFT = 18;
  /** RegularExpression Id. */
  int NOT_LEFT = 19;
  /** RegularExpression Id. */
  int CONGRAT_LEFT = 20;
  /** RegularExpression Id. */
  int ROOT_LEFT = 21;
  /** RegularExpression Id. */
  int PARENTHESIS_LEFT = 22;
  /** RegularExpression Id. */
  int PARENTHESIS_RIGHT = 23;
  /** RegularExpression Id. */
  int BRACKETS_LEFT = 24;
  /** RegularExpression Id. */
  int BRACKETS_RIGHT = 25;
  /** RegularExpression Id. */
  int LITTERAL = 26;
  /** RegularExpression Id. */
  int ZERO = 27;
  /** RegularExpression Id. */
  int UN = 28;
  /** RegularExpression Id. */
  int EXPRESSION = 29;
  /** RegularExpression Id. */
  int RULE_INPUT_TYPE = 30;
  /** RegularExpression Id. */
  int LEFT_RULE_EQUIVALENT = 31;
  /** RegularExpression Id. */
  int LEFT_RULE_NOT_EQUIVALENT = 32;
  /** RegularExpression Id. */
  int RIGHT_RULE = 33;

  /** Lexical state. */
  int DEFAULT = 0;

  /** Literal token values. */
  String[] tokenImage = {
    "<EOF>",
    "\" \"",
    "\"\\t\"",
    "\"\\n\"",
    "\"\\r\"",
    "\"|\"",
    "\"&\"",
    "\">=\"",
    "\"<=\"",
    "\">\"",
    "\"<\"",
    "\"!=\"",
    "\"=\"",
    "\"-\"",
    "\"+\"",
    "\"/\"",
    "\"*\"",
    "\"^\"",
    "\"sqrt\"",
    "\"!\"",
    "\"congrat\"",
    "\"#\"",
    "\"(\"",
    "\")\"",
    "\"{\"",
    "\"}\"",
    "<LITTERAL>",
    "\"0\"",
    "\"1\"",
    "<EXPRESSION>",
    "<RULE_INPUT_TYPE>",
    "\"<=(\"",
    "\"=(\"",
    "\")=>\"",
  };

}
